
/*
 * Copyright (C) 2010-2011 VTT Technical Research Centre of Finland.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation;
 * version 2.1 of the License.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 */

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package fi.vtt.noen.mfw.bundle.server.plugins.webui.sacservice;

import fi.vtt.noen.mfw.bundle.common.Logger;
import fi.vtt.noen.mfw.bundle.server.plugins.webui.WebUIPlugin;


/**
 * This class was generated by Apache CXF 2.3.0
 * Tue Jan 25 14:14:10 EET 2011
 * Generated source version: 2.3.0
 * 
 */

@javax.jws.WebService(
                      serviceName = "MFW_SAC_service",
                      portName = "MFW_SAC",
                      targetNamespace = "http://www.bugyobeyond.org/MFW_SAC/",
                      wsdlLocation = "file:MFW_SAC_EADS_proposal_v3.1.wsdl",
                      endpointInterface = "fi.vtt.noen.mfw.bundle.server.plugins.webui.sacservice.MFWSAC")
                      
public class MFWSACImpl implements MFWSAC {

  private final static Logger log = new Logger(MFWSACImpl.class);
  
  private final WebUIPlugin webUi;
  private final long sacId;

    public MFWSACImpl(WebUIPlugin webUi, long sacId) {
    this.webUi = webUi;
    this.sacId = sacId;
  }

    /* (non-Javadoc)
     * @see fi.vtt.noen.mfw.bundle.server.plugins.webui.bmresultspage.sacservice.MFWSAC#setAvailability(fi.vtt.noen.mfw.bundle.server.plugins.webui.bmresultspage.sacservice.Availability  parameters )*
     */
    public OperationResult setAvailability(Availability parameters) { 
        try {
          log.debug("Executing operation setAvailability");
          OperationResult result = new OperationResult();
          result.setError(false);
          return result;

        } catch (Exception ex) {
            ex.printStackTrace();
            OperationResult result = new OperationResult();
            result.setError(false);
            return result;
        }
    }

    /* (non-Javadoc)
     * @see fi.vtt.noen.mfw.bundle.server.plugins.webui.bmresultspage.sacservice.MFWSAC#getSAC(fi.vtt.noen.mfw.bundle.server.plugins.webui.bmresultspage.sacservice.GetSAC  parameters )*
     */
    public SAC getSAC(GetSAC parameters) { 
        try {
          log.debug("Executing operation getSAC");
          SAC sac = new SAC();
          sac.setId(sacId);
          return sac;
          
        }catch (Exception e) {
          e.printStackTrace();
          SAC sac = new SAC();
          sac.setId(sacId);
          return sac;
        }
    }

    /* (non-Javadoc)
     * @see fi.vtt.noen.mfw.bundle.server.plugins.webui.bmresultspage.sacservice.MFWSAC#setBMResults(fi.vtt.noen.mfw.bundle.server.plugins.webui.bmresultspage.sacservice.BMResults  parameters )*
     */
    public OperationResult setBMResults(BMResults parameters) { 
        try {
          log.debug("Executing operation setBMResults");
          if (parameters.getPerDevice() != null) {
            for (BMResults.PerDevice perDevice : parameters.getPerDevice()) {
              if (parameters.getPerDevice() != null) {
                for (BMResult bmResult : perDevice.getBMResult()) {                  
                  fi.vtt.noen.mfw.bundle.server.plugins.webui.bmresultspage.BMResult bm = new fi.vtt.noen.mfw.bundle.server.plugins.webui.bmresultspage.BMResult(bmResult.getId(), perDevice.getDeviceId(), bmResult.getValue(), bmResult.getTimeStamp(), false);
                  webUi.addBMResult(bm);                  
                }
              }
            }
          }
          OperationResult result = new OperationResult();
          result.setError(false);
          return result;
          
        }catch (Exception e) {
          e.printStackTrace();
          OperationResult result = new OperationResult();
          result.setError(true);
          return result;
        }
    }

}
